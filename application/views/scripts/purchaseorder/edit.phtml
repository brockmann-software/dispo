<script>
var lastPO_Line;

function buildPoRow(row, orderLine)
{
	row.id = orderLine.No;
	var cellNo = row.insertCell(0);
	cellNo.className = 'data';
	cellNo.innerHTML = orderLine.vNo;
	var cellVariant = row.insertCell(1);
	cellVariant.className = 'data';
	cellVariant.innerHTML = orderLine.variant;
	var cellTradingUnits = row.insertCell(2);
	cellTradingUnits.className = 'data_num';
	cellTradingUnits.innerHTML = orderLine.tradingUnits;
	var cellPuTu = row.insertCell(3);
	cellPuTu.className = 'data_num';
	cellPuTu.innerHTML = orderLine.puTu;
	var cellPackingUnits = row.insertCell(4);
	cellPackingUnits.className = 'data_num';
	cellPackingUnits.innerHTML = orderLine.packingUnits;
	var cellPrice = row.insertCell(5);
	cellPrice.className = 'data';
	var inpPrice = document.createElement('input');
	inpPrice.name = row.id+'_price';
	inpPrice.id = row.id+'_price';
	inpPrice.value = orderLine.price;
	inpPrice.step = '0.0001';
	inpPrice.onchange = function() { editPOLine(this); };
	cellPrice.appendChild(inpPrice);
	var cellPriceAlloc = row.insertCell(6);
	cellPriceAlloc.className = 'data';
	var selPriceAlloc = document.getElementById('ini_price_alloc').cloneNode(true);
	selPriceAlloc.name = row.id+'_price_alloc';
	selPriceAlloc.id = row.id+'_price_alloc';
	selPriceAlloc.value = orderLine.priceAlloc;
	cellPriceAlloc.appendChild(selPriceAlloc);
	var cellPallets = row.insertCell(7);
	cellPallets.className = 'data_num';
	cellPallets.innerHTML = orderLine.pallets;
	var cellTuPal = row.insertCell(8);
	cellTuPal.className = 'data_num';
	cellTuPal.innerHTML = orderLine.tuPal;
	var cellTuInb = row.insertCell(9);
	cellTuInb.className = 'data_num';
	cellTuInb.innerHTML = orderLine.tuInbound;
}

function buildPoTable(orderlines)
{
	orderlineTable = document.getElementById('po_line').getElementsByTagName('tbody')[0];
	while (orderlineTable.rows.length>0) orderlineTable.deleteRow(0);
	for (cnt=0; cnt<orderlines.length; cnt++) {
		var row = orderlineTable.insertRow(cnt);
		buildPoRow(row, orderlines[cnt]);
	}
}

function getPOLines(pOrder) {

	function getPOLinesXML() {
		var row;
		if (http.readyState == 4) {
			if (http.responseXML) {
				errorCount = getXMLTagValue(http.responseXML, 'errorCount') || 0;
				if (errorCount==0) {
					result = http.responseXML.getElementsByTagName('result');
					var orderlines = [];
					for (cnt=0; cnt<result.length; cnt++) {
						var orderLine = new Object();
						orderLine.No = getXMLTagValue(result[cnt], 'No') || 0;
						orderLine.purchaseOrder = getXMLTagValue(result[cnt], 'Purchase_order') || '';
						orderLine.Line = getXMLTagValue(result[cnt], 'Line') || 0;
						orderLine.vNo = getXMLTagValue(result[cnt], 'v_no') || '';
						orderLine.variant = getXMLTagValue(result[cnt], 'variant') || '';
						orderLine.tradingUnits = getXMLTagValue(result[cnt], 'Trading_Units') || 0;
						orderLine.puTu = getXMLTagValue(result[cnt], 'PU_TU') || 0;
						orderLine.packingUnits = getXMLTagValue(result[cnt], 'Packing_Units') || 0;
						orderLine.price = getXMLTagValue(result[cnt], 'Price') || 0;
						orderLine.priceAlloc = getXMLTagValue(result[cnt], 'Price_Allocation') || 0;
						orderLine.pallets = getXMLTagValue(result[cnt], 'Pallets') || 0;
						orderLine.tuPal = getXMLTagValue(result[cnt], 'TU_Pallet') || 0;
						orderLine.LineValue = getXMLTagValue(result[cnt], 'line_value') || 0;
						orderLine.tuInbound = getXMLTagValue(result[cnt], 'tu_inbound') || 0;
						orderlines.push(orderLine);
					}
					buildPoTable(orderlines);
				} else {
					var errTxt = '';
					errors = http.responseXML.getElementsByTagName('error');
					for (ec = 0; ec<errors.length; ec++) {
						errTxt+=getXMLTagValue(errors[ec], 'error_field')+' ';
						errTxt+=getXMLTagValue(errors[ec], 'error_text')+'\n';
					}
					alert(errTxt);
				}
			} else {
				alert(http.responseText);
			}
		}
	}
	createRequest();
	var URI = '/purchaseorder/getpoline/purchase_order/'+pOrder;
	sendRequest('GET', URI, '', getPOLinesXML, true);
}

function editPOLine(element)
{
	function editPOLineXML()
	{
		if (http.readyState == 4) {
			if (http.responseXML) {
				errorCount = getXMLTagValue(http.responseXML, 'errorCount') || 0;
				if (errorCount==0) {					
					newNo = getXMLTagValue(http.responseXML, 'No') || '';
					price.value = getXMLTagValue(http.responseXML, 'price') || '';
					price_alloc.value = getXMLTagValue(http.responseXML, 'price_allocation') || 0;
				} else {
					var errTxt = '';
					errors = http.responseXML.getElementsByTagName('error');
					for (ec = 0; ec<errors.length; ec++) {
						errTxt+=getXMLTagValue(errors[ec], 'error_field')+' ';
						errTxt+=getXMLTagValue(errors[ec], 'error_text')+'\n';
					}
					alert(errTxt);
				}
			} else {
				alert(http.responseText);
			}
		}
	}

	No = element.parentNode.parentNode.id;
	price = document.getElementById(No+'_price');
	price_alloc = document.getElementById(No+'_price_alloc');
	uri = '/purchaseorder/editpoline';
	params = 'No='+No+'&price='+price.value.replace(',','.')+'&price_alloc='+price_alloc.value;
	sendRequest('POST', uri, params, editPOLineXML, true);
}

function fillVendortable(vendor)
{
	var vendorTable = document.getElementById('vendor_table').getElementsByTagName('tbody')[0];
	var rowCnt = vendorTable.rows.length;
	var rowNr = 0;
	for (vc=0; vc<vendor.length; vc++) {
		if ((vc) >= rowCnt) {
			row=vendorTable.insertRow(vc);
			var tdNo=row.insertCell(0);
			var tdName=row.insertCell(1);
			var tdStreet=row.insertCell(2);
			var tdCity=row.insertCell(3);
		} else {
			row=vendorTable.rows[vc];
			var tdNo=row.cells(0);
			var tdName=row.cells(1);
			var tdStreet=row.cells(2);
			var tdCity=row.cells(3);
		}
		tdNo.innerHTML='<input type="radio" name="v_no" value="'+vendor[vc].getElementsByTagName('No')[0].firstChild.nodeValue+'">'+vendor[vc].getElementsByTagName('No')[0].firstChild.nodeValue;
		tdNo.className="data";
		tdName.innerHTML=vendor[vc].getElementsByTagName('name')[0].firstChild.nodeValue;
		tdName.className="data";
		tdStreet.innerHTML=vendor[vc].getElementsByTagName('street')[0].firstChild.nodeValue;
		tdStreet.className="data";
		tdCity.innerHTML=vendor[vc].getElementsByTagName('city')[0].firstChild.nodeValue;
		tdCity.className="data";
		if (rowCnt>vc) {
			var lastRow=vc;
			do {
				vendorTable.deleteRow(lastRow);
				vc++;
			} while (vc<rowCnt)
		}
	}
}

function newVariantRow(row)
{
	var tdVariant=row.insertCell(0);
	var inpVariant = document.createElement('input');
	inpVariant.type = 'text';
	inpVariant.name = 'v_no';
	inpVariant.size = 30;
	inpVariant.maxlength = 30;
	tdVariant.appendChild(inpVariant);
	
	var tdarticle=row.insertCell(1);
	var inpProduct = new document.createElement('input');
	inpProduct.type = 'text';
	inpProduct.name = 'variant';
	inpProduct.size = 50;
	inpProduct.maxlength = 255;
	tdarticle.appendChild(inpProduct);
	
	var tdTU=row.insertCell(2);
	var inpTU = new document.createElement('input');
	inpTU.name = 'Trading_Units';
	inpTU.type = 'number';
	inpTU.size = 8;
	impTU.min = 0;
	tdTU.appendChild(inpTU);
	
	var tdPU_TU=row.insertCell(3);
	var inpPU_TU = new document.createElement('input');
	inpPU_TU.type = 'number';
	inpPU_TU.name = 'PU_TU';
	inpPU_TU.size = 8;
	impPU_TU.min = 0;
	tdPU_TU.appendChild(inpPU_TU);

	var tdPU=row.insertCell(4);
	var inpPU = new document.createElement('input');
	inpPU.type = 'number';
	inpPU.name = 'Packing_Units';
	inpPU.size = 8;
	impPU.min = 0;
	tdPU.appendChild(inpPU);
	
	var tdPallets=row.insertCell(5);
	var inpPallets = new document.createElement('input');
	inpPallets.type = 'number';
	inpPallets.name = 'Pallets';
	inpPallets.size = 8;
	impPallets.min = 0;
	tdPallets.appendChild(inpPallets);
	
	var tdTU_Pal=row.insertCell(6);
	var inpTU_Pal = new document.createElement('input');
	inpTU_Pal.type = 'number';
	inpTU_Pal.name = 'TU_Pallets';
	inpTU_Pal.size = 8;
	impTU_Pal.min = 0;
	tdTU_Pal.appendChild(inpTU_Pal);
}

function loadVendor()
{
	function loadVendorXML()
	{
		if (http.readyState==4) {
			xmlResult = http.responseXML;
			if (xmlResult.getElementsByTagName('errorCount')[0].firstChild==null) errorCount = 0;
			else errorCount = xmlResult.getElementsByTagName('errorCount')[0].firstChild.nodeValue;
			if (errorCount==0) {
				var vendor = xmlResult.getElementsByTagName('result');
				if (vendor.length==1) {
					var vendor_name = vendor[0].getElementsByTagName('name')[0].firstChild.nodeValue;
					vendor_name = vendor_name + ", "+vendor[0].getElementsByTagName('city')[0].firstChild.nodeValue;
					document.getElementById('vendor_name').innerHTML=vendor_name;
				} else {
					var dialog = document.getElementById('vendor_dialog');
//					filltable(vendor);
//					dialog.showModal();
					URI = '/vendor/vendordialog/No/'+document.getElementById('vendor_no').value;
					result=window.showModalDialog(URI,null,
		                       'dialogWidth=600px;dialogHeight=400px;diologLeft=0;dialogTop=100;resizable=yes;scroll=yes');
					document.getElementById('vendor_no').value = result['no'];
					document.getElementById('vendor_name').innerHTML = result['name']+", "+result['city']+" "+result['country_code'];
				}
			} else {
				var errors = xmlResult.getElementsByTagName('error');
				for (e = 0; e < errorCount; e++) {
					field = errors[e].childNodes[1].nodeName;
					value = errors[e].childNodes[1].firstChild.nodeValue;
					var errorText = errorText+"["+field+"] "+value+"\n";
				}
				alert(errorText);
			}
		}
	}
	
	createRequest();
	var URI = '/vendor/get/No/'+document.getElementById('vendor_no').value;
	sendRequest("GET", URI, '', loadVendorXML, true);
}

function loadVariant()
{	
	function loadVariantXML()
	{
		if (http.readyState==4) {
			var variant = [];
			xmlResult = http.responseXML;
			if (xmlResult.getElementsByTagName('errorCount')[0].firstChild==null) errorCount = 0;
			else errorCount = xmlResult.getElementsByTagName('errorCount')[0].firstChild.nodeValue;
			if (errorCount==0) {
				var variants = xmlResult.getElementsByTagName('result');
				if (variants.length==1) {
					variant['No'] = variants[0].getElementsByTagName('No')[0].firstChild.nodeValue;
					variant['variant'] = variants.getElementsByTagName('variant')[0].firstChild.nodeValue;
					variant['items'] = variants.getElementsByTagName('items')[0].firstChild.nodeValue;
				} else {
					var dialog = document.getElementById('vendor_dialog');
//					filltable(vendor);
//					dialog.showModal();
					URI = '/variant/variantdialog/No/'+row.getElementById('vendor_no').value;
					result=window.showModalDialog(URI,null,
		                       'dialogWidth=600px;dialogHeight=400px;diologLeft=0;dialogTop=100;resizable=yes;scroll=yes');
					document.getElementById('vendor_no').value = result['no'];
					document.getElementById('vendor_name').innerHTML = result['name'];
				}
			} else {
				var errors = xmlResult.getElementsByTagName('error');
				for (e = 0; e < errorCount; e++) {
					field = errors[e].childNodes[1].nodeName;
					value = errors[e].childNodes[1].firstChild.nodeValue;
					var errorText = errorText+"["+field+"] "+value+"\n";
				}
				alert(errorText);
			}
		}
	}

}
</script>


<?php //Zend_Debug::dump($this->params); ?>
<?php $data = $this->params['data']; ?>
<?php $errors = $this->params['errors']; ?>
<form action="/purchaseorder/edit/" method="post">
<legend><?php echo $this->params['title']; ?></legend>
<fieldset>
<?php if (isset($this->errors['all'])) : ?><div class="error">
<?php echo $this->errors['all']; ?>
</div><?php  endif ?>
<table>
	<tr>
		<td></td><td><input type="hidden" name="old_No" value="<?php echo $data['No']; ?>" /></td>
	</tr>
	<tr>
		<td>Nummer</td>
		<td>
			<?php if (isset($errors['No'])) :?><div class="error"><?php endif ?>
			<input type="text" name="No" value="<?php echo $data['No']; ?>" readonly="true" />
			<?php if (isset($errors['No'])) :?><br /><?php echo $errors['No']; ?></div><?php endif ?>
		</td>
	</tr>
	<tr>
		<td>Kreditor</td>		
		<td><input type="text" id="vendor_no" name="vendor" size="20" maxlength="20" value="<?php echo $data['vendor']; ?>" onchange="loadVendor()" />
		<td>Name</td>
		<td id="vendor_name"><?php echo $this->params['vendor']['name']; ?></td>
	</tr>
	<tr>
		<td>Ankunft</td>
		<td>
			<input type="text" name="arrival_date" id="arrival_date" maxlength="10" size="10" value="<?php echo date('d.m.Y', strtotime($data['arrival'])); ?>" onchange="checkDate('arrival_date')" />&#160
			<input type="text" name="arrival_time" size="8" maxlength="8" value="<?php echo date('H:i', strtotime($data['arrival'])); ?>" onchange="checkTime('arrival_time')" />
		</td>
		<td>Abgang</td>
		<td>
			<input type="text" name="departure_date" id="departure_date" maxlength="10" size="10" value="<?php echo date('d.m.Y', strtotime($data['departure'])); ?>" onchange="checkDate('departure_date')" /> 
			<input type="text" name="departure_time" id="departure_time" size="8" maxlength="8" value="<?php echo date('H:i', strtotime($data['departure'])); ?>" onchange="checkTime('departure_time')" />
		</td>
	</tr>
	<tr>
		<td>LKW</td>
		<td><input type="text" name="truck" maxlength="40" size="40" value="<?php echo $data['truck']; ?>" /></td>
		<td>Anhänger</td>
		<td><input type="text" name="trailor" maxlength="40" size="40" value="<?php echo $data['trailor']; ?>" /></td>
	</tr>
	<tr>
		<td>Parität</td><td><?php echo $this->lookupSelect('incoterm', $data['incoterm'], 'incoterm', $this->params['incoterms'], 'No', 'Incoterm'); ?></td>
		<td>Fracht</td><td><?php echo $this->formText('freight', $data['freight']); ?>&#160<?php echo $this->lookupSelect('freight_alloc', $this->data['freight_alloc'], 'freight_alloc', $this->params['price_allocations'], 'No', 'Allocation'); ?></td>
	<tr>
		<td></td><td><input type="submit" name="submit" value="Speichern" /> <input type="submit" name="submit" value="Abbrechen" /></td>
	</tr>
</table>
<hr />
<table id="po_line">
<thead>
<th class="data" width="20">Variante</th>
<th class="data">Beschreibung</th>
<th class="data" width="10">Kolli</>
<th class="data" width="10">Menge/Kolli</th>
<th class="data" width="12">Menge ges.</th>
<th class="data" width="10">Preis</th>
<th class="data" width="15">per</th>
<th class="data" width="6">Paletten</th>
<th class="data" width="10">Kolli / Pal.</th>
<th class="data" width="15">Kolli gel.</th>
</thead>
<tbody>
<?php foreach ($this->params['poLines'] as $po_line) : ?>
<tr id="<?php echo $po_line['No']; ?>">
<td class="data"><?php echo $po_line['v_no']; ?></td>
<td class="data"><?php echo $po_line['variant']; ?></td>
<td class="data_num"><?php echo $po_line['Trading_Units']; ?></td>
<td class="data_num"><?php echo $po_line['PU_TU']; ?></td>
<td class="data_num"><?php echo $po_line['Packing_Units']; ?></td>
<td class="data"><input type="number" value="<?php echo $po_line['Price'];?>" name="<?php echo $po_line['No']; ?>_price" id="<?php echo $po_line['No']; ?>_price" step="0.0001" onchange="editPOLine(this)" /></td>
<td class="data"><?php echo $this->lookupSelect('price_alloc', $po_line['Price_Allocation'], 'price_allocation', $this->params['price_allocations'], 'No', 'Allocation', array('id'=>$po_line['No'].'_price_alloc', 'style'=>'{width: 99%;}', 'onchange'=>'editPOLine(this)')); ?></td>
<td class="data_num"><?php echo $po_line['Pallets']; ?></td>
<td class="data_num"><?php echo $po_line['TU_Pallet']; ?></td>
<td class="data_num"><?php echo $po_line['tu_inbound']; ?></td>
</tr>
<?php endforeach ?>
</tbody>
</table>
</form>
